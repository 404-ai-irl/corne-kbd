#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Caps_word {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 27>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 31>;
        };

        left_parenth {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        right_parenth {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <26 27>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 33>;
        };
    };

    behaviors {
        j_j_gresc_behavior: j_j_gresc_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "J_J_GRESC_BEHAVIOR";
            #binding-cells = <0>;
            bindings = <&kp J>, <&gresc>;

            tapping-term-ms = <50>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            hold-trigger-key-positions = <16 15 14 13>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <19 20 21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "LGND";
            bindings = <
&gresc            &kp Q            &kp W             &kp E                &kp R            &kp T          &kp Y    &kp U          &kp I             &kp O    &kp P     &kp PAGE_UP
&kp LEFT_CONTROL  &hml LEFT_GUI A  &mt LEFT_SHIFT S  &hml LEFT_CONTROL D  &hml LEFT_ALT F  &kp G          &kp H    &kp J          &kp K             &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT    &kp Z            &kp X             &kp C                &kp V            &kp B          &kp N    &kp M          &kp COMMA         &kp DOT  &kp FSLH  &kp PAGE_DOWN
                                                     &kp LGUI             &lt 2 TAB        &lt 1 SPACE    &kp RET  &kp BACKSPACE  &kp LEFT_CONTROL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "NUMB";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp ASTERISK       &kp N7        &kp N8        &kp N9        &kp PLUS   &kp EQUAL
&trans  &trans  &trans  &trans    &trans  &trans       &kp MINUS          &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0     &trans
&trans  &trans  &trans  &trans    &trans  &trans       &kp RIGHT_BRACKET  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &trans
                        &kp LGUI  &trans  &kp SPACE    &kp RET            &kp DEL       &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "EXTRA";
            bindings = <
&kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp BSPC
&trans   &trans    &trans  &trans    &trans    &trans       &kp LEFT   &kp DOWN  &kp UP_ARROW     &kp RIGHT  &kp BSLH  &kp GRAVE
&trans   &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS  &kp LBRC         &kp RBRC   &kp PIPE  &kp TILDE
                           &kp LGUI  &trans    &kp SPACE    &kp RET    &trans    &kp RALT
            >;
        };

        hidden_1 {
            display-name = "BT";
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans          &kp N7  &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &studio_unlock  &trans  &kp UP    &kp RIGHT  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans          &trans  &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET         &trans  &kp RALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        hidden_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
